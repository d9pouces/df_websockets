{"version":3,"file":"df_websockets/static/js/df_websockets.min.js","mappings":"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","sources":["webpack://df_websockets/./df_websockets/app.js","webpack://df_websockets/./df_websockets/html.js","webpack://df_websockets/./df_websockets/base.js","webpack://df_websockets/./df_websockets/forms.ts","webpack://df_websockets/webpack/bootstrap","webpack://df_websockets/webpack/runtime/define property getters","webpack://df_websockets/webpack/runtime/hasOwnProperty shorthand","webpack://df_websockets/webpack/startup"],"sourcesContent":["////////////////////////////////////////////////////////////////////////////////\n// This file is part of df_websockets                                          /\n//                                                                             /\n// Copyright (C) 2020 Matthieu Gallet <github@19pouces.net>                    /\n// All Rights Reserved                                                         /\n//                                                                             /\n// You may use, distribute and modify this code under the                      /\n// terms of the (BSD-like) CeCILL-B license.                                   /\n//                                                                             /\n// You should have received a copy of the CeCILL-B license with                /\n// this file. If not, please visit:                                            /\n// https://cecill.info/licences/Licence_CeCILL-B_V1-en.txt (English)           /\n// or https://cecill.info/licences/Licence_CeCILL-B_V1-fr.txt (French)         /\n//                                                                             /\n////////////////////////////////////////////////////////////////////////////////\n\nwindow.DFSignals = {\n    connection: null,\n    buffer: [],\n    registry: {},\n    wsurl: null\n};\n\nfunction getCookie(cname) {\n    const name = cname + \"=\";\n    const decodedCookie = decodeURIComponent(document.cookie);\n    const ca = decodedCookie.split(';');\n    for (let i = 0; i < ca.length; i++) {\n        let c = ca[i];\n        while (c.charAt(0) === ' ') {\n            c = c.substring(1);\n        }\n        if (c.indexOf(name) === 0) {\n            return c.substring(name.length, c.length);\n        }\n    }\n    return \"\";\n}\n\nfunction websocketConnect() {\n    const cookieName = \"dfwsurl\";\n    if (window.DFSignals.wsurl === null) {\n        const dfWsURL = getCookie(cookieName);\n        window.DFSignals.wsurl = decodeURIComponent(dfWsURL);\n    }\n    if (!window.DFSignals.wsurl) {\n        console.info(\"Unable to get the websocket URL in the '\" + cookieName + \"' cookie.\");\n        return;\n    }\n    const connection = new WebSocket(window.DFSignals.wsurl);\n    /* cannot use header or cookies (cookies may change after the initial connection)\n    *  so we use GET parameter\n    *  */\n    connection.onopen = () => {\n        window.DFSignals.connection = connection;\n        for (let i = 0; i < window.DFSignals.buffer.length; i++) {\n            connection.send(window.DFSignals.buffer[i]);\n        }\n        window.DFSignals.buffer = [];\n    };\n    connection.onmessage = (e) => {\n        console.debug('received call ' + e.data + ' from server.')\n        const msg = JSON.parse(e.data);\n        // noinspection JSUnresolvedVariable\n        if (msg.signal && msg.signal_id) {\n            window.DFSignals.call(msg.signal, msg.opts, msg.signal_id);\n        }\n    };\n    connection.onerror = (e) => {\n        console.error(\"WS error: \" + e);\n    };\n    connection.onclose = () => {\n        window.DFSignals.connection = null;\n        setTimeout(websocketConnect, 3000);\n    }\n}\n\nfunction call(signal, opts, id) {\n    /*\"\"\"\n    .. function:: call(signal, opts, id)\n\n        Call a signal.\n        If the signal is also defined in the Python server and available to the user, then the Python signal is also triggered.\n\n        :param string signal: Name of the called signal.\n        :param object opts: Object with signal arguments.\n        :param string id: Unique id of each signal triggered by the server. Do not use it yourself.\n        :returns: always `false`.\n    */\n    // if (window.DFSignals.registry[signal] === undefined) {\n    //     console.debug('unknown call \"' + signal + '\" (from both client and server).');\n    //     return false;\n    // } else\n    if ((id !== undefined) && (window.DFSignals.registry[id] !== undefined)) {\n        return false;\n    } else if (id !== undefined) {\n        window.DFSignals.registry[id] = true;\n    }\n    if (window.DFSignals.registry[signal] !== undefined) {\n        console.debug('call \"' + signal + '\"', opts);\n        for (let i = 0; i < window.DFSignals.registry[signal].length; i += 1) {\n            window.DFSignals.registry[signal][i](opts, id);\n        }\n    }\n    if (id === undefined) {\n        console.debug('call from client: \"' + signal + '\"', opts);\n        const msg = JSON.stringify({signal: signal, opts: opts});\n        if (window.DFSignals.connection) {\n            window.DFSignals.connection.send(msg);\n        } else {\n            window.DFSignals.buffer.push(msg);\n        }\n    }\n\n    return false;\n}\n\nfunction connect(signal, fn) {\n    /*\"\"\"\n    .. function:: connect(signal, fn)\n\n        Connect a javascript code to the given signal name.\n\n        :param string signal: Name of the signal.\n        :param function fn: Function that takes a single object as argument. The properties of this object are the signal arguments.\n        :returns: nothing.\n    */\n    if (window.DFSignals.registry[signal] === undefined) {\n        window.DFSignals.registry[signal] = [];\n    }\n    window.DFSignals.registry[signal].push(fn);\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", websocketConnect);\n\nwindow.DFSignals.call = call;\nwindow.DFSignals.connect = connect;\n","////////////////////////////////////////////////////////////////////////////////\n// This file is part of df_websockets                                          /\n//                                                                             /\n// Copyright (C) 2020 Matthieu Gallet <github@19pouces.net>                    /\n// All Rights Reserved                                                         /\n//                                                                             /\n// You may use, distribute and modify this code under the                      /\n// terms of the (BSD-like) CeCILL-B license.                                   /\n//                                                                             /\n// You should have received a copy of the CeCILL-B license with                /\n// this file. If not, please visit:                                            /\n// https://cecill.info/licences/Licence_CeCILL-B_V1-en.txt (English)           /\n// or https://cecill.info/licences/Licence_CeCILL-B_V1-fr.txt (French)         /\n//                                                                             /\n////////////////////////////////////////////////////////////////////////////////\n\nexport const htmlAfter = opts => {\n    document.querySelectorAll(opts.selector).forEach(elt => {\n        const originalNextSibling = elt.nextSibling;\n        elt.insertAdjacentHTML('afterend', opts.content);\n        let sibling = elt.nextSibling;\n        while (sibling && (sibling !== originalNextSibling)) {\n            sibling.dispatchEvent(new Event('DOMContentAdded', {bubbles: true}));\n            sibling = sibling.nextSibling;\n        }\n    });\n};\nexport const htmlAppend = opts => {\n    document.querySelectorAll(opts.selector).forEach(elt => {\n        const originalLastChild = elt.lastChild;\n        elt.insertAdjacentHTML('beforeend', opts.content);\n        let child = elt.lastChild;\n        while (child && (child !== originalLastChild)) {\n            child.dispatchEvent(new Event('DOMContentAdded', {bubbles: true}));\n            child = child.previousSibling;\n        }\n    });\n};\nexport const htmlPrepend = opts => {\n    document.querySelectorAll(opts.selector).forEach(elt => {\n        const originalFirstChild = elt.firstChild;\n        elt.insertAdjacentHTML('afterbegin', opts.content);\n        let child = elt.firstChild;\n        while (child && (child !== originalFirstChild)) {\n            child.dispatchEvent(new Event('DOMContentAdded', {bubbles: true}));\n            child = child.nextSibling;\n        }\n    });\n};\nexport const htmlBefore = opts => {\n    document.querySelectorAll(opts.selector).forEach(elt => {\n        const originalPreviousSibling = elt.previousSibling;\n        elt.insertAdjacentHTML('beforebegin', opts.content);\n        let sibling = elt.previousSibling;\n        while (sibling && (sibling !== originalPreviousSibling)) {\n            sibling.dispatchEvent(new Event('DOMContentAdded', {bubbles: true}));\n            sibling = sibling.previousSibling;\n        }\n    });\n};\nexport const htmlContent = (opts) => {\n    document.querySelectorAll(opts.selector).forEach(elt => {\n        elt.innerHTML = opts.content;\n        let child = elt.firstChild;\n        while (child) {\n            child.dispatchEvent(new Event('DOMContentAdded', {bubbles: true}));\n            child = child.nextSibling;\n        }\n    });\n};\nexport const htmlReplaceWith = (opts) => {\n    document.querySelectorAll(opts.selector).forEach(elt => {\n        const previousSibling = elt.previousSibling;\n        const nextSibling = elt.nextSibling;\n        const parentNode = elt.parentNode;\n        elt.outerHTML = opts.content;\n        let sibling = parentNode.firstChild;\n        if (previousSibling) {\n            sibling = previousSibling.nextSibling;\n        }\n        while (sibling && (sibling !== nextSibling)) {\n            sibling.dispatchEvent(new Event('DOMContentAdded', {bubbles: true}));\n            sibling = sibling.nextSibling;\n        }\n    });\n};\nexport const htmlEmpty = opts => {\n    document.querySelectorAll(opts.selector).forEach(elt => {\n        while (elt.firstChild) {\n            elt.removeChild(elt.firstChild);\n        }\n    });\n};\nexport const htmlRemove = opts => {\n    document.querySelectorAll(opts.selector).forEach(elt => {\n        elt.parentNode.removeChild(elt);\n    });\n};\nexport const htmlText = (opts) => {\n    document.querySelectorAll(opts.selector).forEach(elt => {\n        elt.textContent = opts.content;\n    });\n};\n","////////////////////////////////////////////////////////////////////////////////\n// This file is part of df_websockets                                          /\n//                                                                             /\n// Copyright (C) 2020 Matthieu Gallet <github@19pouces.net>                    /\n// All Rights Reserved                                                         /\n//                                                                             /\n// You may use, distribute and modify this code under the                      /\n// terms of the (BSD-like) CeCILL-B license.                                   /\n//                                                                             /\n// You should have received a copy of the CeCILL-B license with                /\n// this file. If not, please visit:                                            /\n// https://cecill.info/licences/Licence_CeCILL-B_V1-en.txt (English)           /\n// or https://cecill.info/licences/Licence_CeCILL-B_V1-fr.txt (French)         /\n//                                                                             /\n////////////////////////////////////////////////////////////////////////////////\n\nimport {htmlFormsSet, htmlFormsSetAll} from \"./forms\";\nimport {\n    htmlAfter,\n    htmlAppend,\n    htmlBefore,\n    htmlContent,\n    htmlEmpty,\n    htmlPrepend,\n    htmlRemove,\n    htmlReplaceWith, htmlText\n} from \"./html\";\n\nconst htmlAddClass = opts => {\n    document.querySelectorAll(opts.selector).forEach(elt => {\n        // noinspection JSUnresolvedVariable\n        elt.classList.add(opts.class_name)\n    });\n};\nconst htmlRemoveClass = (opts) => {\n    document.querySelectorAll(opts.selector).forEach(elt => {\n        // noinspection JSUnresolvedVariable\n        elt.classList.remove(opts.class_name);\n    });\n};\nconst htmlRemoveAttr = (opts) => {\n    document.querySelectorAll(opts.selector).forEach(elt => {\n        // noinspection JSUnresolvedVariable\n        elt.removeAttribute(opts.attr_name);\n    });\n};\nconst htmlAddAttribute = (opts) => {\n    document.querySelectorAll(opts.selector).forEach(elt => {\n        // noinspection JSUnresolvedVariable\n        elt.setAttribute(opts.attr_name, opts.attr_value);\n    });\n};\nconst htmlBooleanAttribute = (opts) => {\n    document.querySelectorAll(opts.selector).forEach(elt => {\n        if (opts.value) {\n            elt.setAttribute(opts.name, opts.name);\n        } else {\n            elt.removeAttribute(opts.name)\n        }\n    });\n};\nconst htmlDownloadFile = (opts) => {\n    const save = document.createElement('a');\n    save.href = opts.url;\n    save.target = '_blank';\n    save.download = opts.filename || 'unknown';\n    const evt = new MouseEvent('click', {view: window, bubbles: true, cancelable: false});\n    save.dispatchEvent(evt);\n    (window.URL || window.webkitURL).revokeObjectURL(save.href);\n};\nconst htmlFocus = (opts) => {\n    const elt = document.querySelector(opts.selector);\n    if (elt) {\n        elt.focus({preventScroll: false});\n    }\n};\n\nfunction connectSignals() {\n\n    window.DFSignals.connect('html.after', htmlAfter);\n    /*\"\"\"\n    .. function:: html.after(opts)\n\n        Insert content, specified by the parameter, after each element in the set of matched elements.\n        Equivalent to `$().after()` or `.insertAdjacentHTML('afterend', ...)`.\n        Trigger a `DOMContentAdded` event on the added content.\n\n        .. code-block:: javascript\n\n            window.DFSignals.call('html.after', {selector: \"#obj\", content: \"<span>hello</span>\"});\n\n        .. code-block:: python\n\n            trigger(window_info, 'html.after', to=WINDOW, selector=\"#obj\", content=\"<span>hello</span>\")\n\n        :param string selector: HTML selector\n        :param string content: new HTML content\n\n    */\n\n    window.DFSignals.connect('html.append', htmlAppend);\n    /*\"\"\"\n    .. function:: html.append(opts)\n\n        Insert content, specified by the parameter, to the end of each element in the set of matched elements.\n        Equivalent to `$().append()` or `.insertAdjacentHTML('beforeend', ...)`.\n        Trigger a `DOMContentAdded` event on the added content.\n\n        .. code-block:: javascript\n\n            window.DFSignals.call('html.append', {selector: \"#obj\", content: \"<span>hello</span>\"});\n\n        .. code-block:: python\n\n            trigger(window_info, 'html.append', to=WINDOW, selector=\"#obj\", content=\"<span>hello</span>\")\n\n        :param string selector: HTML selector\n        :param string content: new HTML content\n\n    */\n\n    window.DFSignals.connect('html.prepend', htmlPrepend);\n\n    /*\"\"\"\n    .. function:: html.prepend(opts)\n\n        Insert content, specified by the parameter, to the beginning of each element in the set of matched elements.\n        Equivalent to `$().prepend()` or `.insertAdjacentHTML('afterbegin', ...)`.\n        Trigger a `DOMContentAdded` event on the added content.\n\n        .. code-block:: javascript\n\n            window.DFSignals.call('html.prepend', {selector: \"#obj\", content: \"<span>hello</span>\"});\n\n        .. code-block:: python\n\n            trigger(window_info, 'html.prepend', to=WINDOW, selector=\"#obj\", content=\"<span>hello</span>\")\n\n        :param string selector: HTML selector\n        :param string content: new HTML content\n\n    */\n\n    window.DFSignals.connect('html.before', htmlBefore);\n    /*\"\"\"\n    .. function:: html.before(opts)\n\n        Insert content, specified by the parameter, before each element in the set of matched elements..\n        Equivalent to `$().before()` or `.insertAdjacentHTML('beforebegin', ...)`.\n        Trigger a `DOMContentAdded` event on the added content.\n\n        .. code-block:: javascript\n\n            window.DFSignals.call('html.before', {selector: \"#obj\", content: \"<span>hello</span>\"});\n\n        .. code-block:: python\n\n            trigger(window_info, 'html.before', to=WINDOW, selector=\"#obj\", content=\"<span>hello</span>\")\n\n        :param string selector: HTML selector\n        :param string content: new HTML content\n\n    */\n    window.DFSignals.connect('html.content', htmlContent);\n    /*\"\"\"\n    .. function:: html.content(opts)\n\n        set the HTML contents of every matched element.\n\n        .. code-block:: javascript\n\n            window.DFSignals.call('html.content', {selector: \"#obj\", content: \"<span>hello</span>\"});\n\n        .. code-block:: python\n\n            trigger(window_info, 'html.content', to=WINDOW, selector=\"#obj\", content= \"<span>hello</span>\")\n\n\n        :param string selector: HTML selector\n        :param string content: new HTML content\n    */\n\n    window.DFSignals.connect('html.replace_with', htmlReplaceWith);\n    /*\"\"\"\n    .. function:: html.replace_with(opts)\n\n        Replace each element in the set of matched elements with the provided new content.\n\n        .. code-block:: javascript\n\n            window.DFSignals.call('html.replace_with', {selector: \"#obj\", content: \"<span>hello</span>\"});\n\n        .. code-block:: python\n\n            trigger(window_info, 'html.replace_with', to=WINDOW, selector=\"#obj\", content=\"<span>hello</span>\")\n\n        :param string selector: HTML selector\n        :param string content: new HTML content\n\n    */\n\n    window.DFSignals.connect('html.empty', htmlEmpty);\n    /*\"\"\"\n    .. function:: html.empty(opts)\n\n        Remove all child nodes of the set of matched elements from the DOM.\n\n        .. code-block:: javascript\n\n            window.DFSignals.call('html.empty', {selector: \"#obj\"});\n\n        .. code-block:: python\n\n            trigger(window_info, 'html.empty', to=WINDOW, selector=\"#obj\")\n\n        :param string selector: HTML selector\n\n    */\n\n    window.DFSignals.connect('html.remove', htmlRemove);\n    /*\"\"\"\n    .. function:: html.remove(opts)\n\n        Remove the set of matched elements from the DOM.\n\n        .. code-block:: javascript\n\n            window.DFSignals.call('html.remove', {selector: \"#obj\"});\n\n        .. code-block:: python\n\n            trigger(window_info, 'html.remove', to=WINDOW, selector=\"#obj\")\n\n        :param string selector: HTML selector\n\n    */\n\n    window.DFSignals.connect('html.add_class', htmlAddClass);\n    /*\"\"\"\n    .. function:: html.add_class(opts)\n\n        Adds the specified class(es) to each of the set of matched elements.\n\n        .. code-block:: javascript\n\n            window.DFSignals.call('html.add_class', {selector: \"#obj\", class_name: \"myclass\"});\n\n\n        .. code-block:: python\n\n            trigger(window_info, 'html.add_class', to=WINDOW, selector=\"#obj\", class_name=\"myclass\")\n\n\n        :param string selector: HTML selector\n        :param string class_name: new class\n\n    */\n    window.DFSignals.connect('html.remove_class', htmlRemoveClass);\n    /*\"\"\"\n    .. function:: html.remove_class(opts)\n\n        Remove a single class, multiple classes, or all classes from each element in the set of matched elements.\n\n        .. code-block:: javascript\n\n            window.DFSignals.call('html.remove_class', {selector: \"#obj\", class_name: \"class\"});\n\n        .. code-block:: python\n\n            trigger(window_info, 'html.remove_class', to=WINDOW, selector=\"#obj\", class_name=\"attr\")\n\n        :param string selector: HTML selector\n        :param string class_name: class to remove\n\n    */\n    window.DFSignals.connect('html.remove_attr', htmlRemoveAttr);\n    /*\"\"\"\n    .. function:: html.remove_attr(opts)\n\n        Remove an attribute from each element in the set of matched elements.\n\n        .. code-block:: javascript\n\n            window.DFSignals.call('html.remove_attr', {selector: \"#obj\", attr_name: \"attr\"});\n\n        .. code-block:: python\n\n            trigger(window_info, 'html.remove_attr', to=WINDOW, selector=\"#obj\", attr_name=\"attr\")\n\n        :param string selector: HTML selector\n        :param string attr_name: attribute to remove\n\n    */\n\n    window.DFSignals.connect('html.add_attribute', htmlAddAttribute);\n    /*\"\"\"\n    .. function:: html.add_attribute(opts)\n\n        Add an attribute to each element matched by the given selector.\n\n        .. code-block:: javascript\n\n            window.DFSignals.call('html.add_attribute', {selector: \"#obj\", attr_name: \"data-df\", attr_value: \"value\"});\n\n        .. code-block:: python\n\n            trigger(window_info, 'html.add_attribute', to=WINDOW, selector=\"#obj\", attr_name=\"data-df\", attr_value= \"value\")\n\n\n        :param string selector: HTML selector\n        :param string attr_name: name of the attribute to add\n        :param string attr_value: value of the attribute to add\n\n    */\n    window.DFSignals.connect('html.boolean_attribute', htmlBooleanAttribute);\n    /*\"\"\"\n    .. function:: html.boolean_attribute(opts)\n\n        Set or remove a boolean attribute. Always set the value of the added attribute to its name.\n\n        .. code-block:: javascript\n\n            window.DFSignals.call('html.boolean_attribute', {selector: \"#input\", name: \"checked\", value: true});\n\n        .. code-block:: python\n\n            trigger(window_info, 'html.boolean_attribute', to=WINDOW, selector=\"#input\", name=\"checked\", value=True)\n\n\n        :param string selector: HTML selector\n        :param string name: name of the attribute to add\n        :param string value: if True, add the attribute, if False, remove the attribute\n\n    */\n\n\n    window.DFSignals.connect('html.text', htmlText);\n    /*\"\"\"\n    .. function:: html.text(opts)\n\n        Set the text contents of the matched elements.\n\n        .. code-block:: javascript\n\n            window.DFSignals.call('html.text', {selector: \"#obj\", content: \"<span>hello</span>\"});\n\n        .. code-block:: python\n\n            trigger(window_info, 'html.text', to=WINDOW, selector=\"#obj\", content= \"<span>hello</span>\")\n\n\n        :param string selector: HTML selector\n        :param string content: new HTML content\n\n    */\n\n    window.DFSignals.connect('html.download_file', htmlDownloadFile);\n    /*\"\"\"\n    .. function:: html.download_file(opts)\n\n        Force the client to download the given file.\n\n        .. code-block:: javascript\n\n            window.DFSignals.call('html.download_file', {url: \"http://example.org/test.zip\", filename: \"test.zip\"});\n\n    .. code-block:: python\n\n        trigger(window_info, 'html.download_file', to=WINDOW, url=\"http://example.org/test.zip\", filename=\"test.zip\")\n\n        :param string url: URL of the file\n        :param string filename: name of the file\n\n    */\n\n\n    window.DFSignals.connect('html.focus', htmlFocus);\n    /*\"\"\"\n    .. function:: html.focus(opts)\n\n        Set the focus to the matched element.\n\n        .. code-block:: javascript\n\n            window.DFSignals.call('html.focus', {selector: \"#obj\"});\n\n        .. code-block:: python\n\n            trigger(window_info, 'html.focus', to=WINDOW, selector=\"#obj\")\n\n        :param string selector: HTML selector\n\n    */\n\n    window.DFSignals.connect('html.forms.set', htmlFormsSet);\n    /*\"\"\"\n    .. function:: html.forms.set(opts)\n\n        Set the value of a form input\n\n        .. code-block:: javascript\n\n            window.DFSignals.call('html.forms.set', {selector: \"[name=title]\", value: \"new title\"});\n\n        .. code-block:: python\n\n            trigger(window_info, 'html.forms.set', to=WINDOW, selector=\"[name=title]\", value=\"new_title\")\n\n        :param string selector: HTML selector\n\n    */\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", connectSignals);\n","export function serializeForm(form) {\n    /*\n    Serialize a HTMLFormElement as a list of {name: <field name>, value: <field value>}\n    disabled/reset/submit/buttonf fields are ignored\n     */\n    var serialized = [];\n    // Loop through each field in the form\n    for (var i = 0; i < form.elements.length; i++) {\n        var field = form.elements[i];\n        // Respect the same rules as jQuery's serializeArray\n        if (!field.name || field.disabled || field.type === 'reset' || field.type === 'submit' || field.type === 'button') {\n            continue;\n        }\n        if (field.type === \"file\") { // just returns the name of selected files\n            for (var n = 0; n < field.files.length; n++) {\n                serialized.push({ name: field.name, value: field.files[n].name });\n            }\n        }\n        else if (field.type === 'select-multiple') { // get all selected options\n            for (var n = 0; n < field.selectedOptions.length; n++) {\n                serialized.push({ name: field.name, value: field.selectedOptions[n].value });\n            }\n        }\n        else if ((field.type !== 'checkbox' && field.type !== 'radio') || field.checked) {\n            serialized.push({ name: field.name, value: field.value });\n        }\n    }\n    return serialized;\n}\nfunction setFormFieldValue(form, name, value) {\n    var item = form.elements.namedItem(name);\n    if (item === null) {\n        return;\n    }\n    else if (item instanceof RadioNodeList) {\n        if ((value === true) || (value === false)) {\n            item.forEach(function (input) {\n                input.checked = value;\n            });\n        }\n        else if (Array.isArray(value)) {\n            var valuesSet_1 = new Set(value);\n            item.forEach(function (input) {\n                input.checked = valuesSet_1.has(input.value);\n            });\n        }\n        else {\n            item.forEach(function (input) {\n                input.checked = input.value === value;\n            });\n        }\n    }\n    else if (item instanceof HTMLTextAreaElement) {\n        item.value = value;\n    }\n    else if ((item instanceof HTMLInputElement) && (item.type === \"checkbox\")) {\n        if (value === true) {\n            item.checked = true;\n        }\n        else if (value === false) {\n            item.checked = false;\n        }\n        else {\n            item.value = value;\n        }\n    }\n    else if (item instanceof HTMLSelectElement) {\n        var options = item.options;\n        if (Array.isArray(value)) {\n            var valuesSet = new Set(value);\n            for (var i = 0; i < options.length; i++) {\n                options[i].selected = valuesSet.has(options[i].value);\n            }\n        }\n        else {\n            for (var i = 0; i < options.length; i++) {\n                options[i].selected = options[i].value === value;\n            }\n        }\n    }\n    else if (item instanceof HTMLInputElement) {\n        item.value = value;\n    }\n}\nexport function htmlFormsSet(opts) {\n    document.querySelectorAll(opts.selector).forEach(function (form) {\n        opts.values.forEach(function (values) {\n            setFormFieldValue(form, values.name, values.value);\n        });\n    });\n}\nfunction DOMContentAdded(evt) {\n    /*\n    search all HTML elements with an attribute \"data-df-signal\" that contains a JSON list of Signal objects:\n    {\n        name: \"name of the signal to call\",  (required)\n        on: \"name of the listened event\",\n        opts: \"extra options\",               (optional)\n        form: \"name of option to add to opts that contains the serialized form\",  (optional)\n        value: \"name of option to add to opts that contains the value\",  (optional)\n        prevent: preventDefault               (optional, defaults to true for on==\"submit\" or \"click\" else false )\n    }\n\n    When the listened event is not given, the listened event is\n        * \"submit\" for forms,\n        * \"click\" for \"reset\"/\"submit\"/\"button\" input fields,\n        * \"change\" for other fields.\n\n    Using on a HTML form:\n    ```html\n    <form data-df-signal='[{\"name\": \"signal.name\", \"on\": \"change\", \"form\": \"form_data\", \"opts\": {\"id\": 42} }]'>\n        <input type=\"text\" name=\"title\" value=\"df_websockets\">\n    </form>```\n    or, using the Django templating system:\n    ```html\n    {% load df_websockets %}\n    <form {% js_call \"signal.name\" on=\"change\" form=\"form_data\" id=42 %}>\n        <input type=\"text\" name=\"title\" value=\"df_websockets\">\n    </form>```\n\n    When the field \"title\" is modified, a signal \"signal.name\" is triggered on the server (via the websocket) with\n    the following arguments:\n    ```python\n    form_data = [{\"name\": \"title\", \"value\": \"df_websockets\"}]\n    id = 42\n    ```\n\n    Using on a HTML form input field:\n    ```html\n    <form>\n        <input type=\"text\" name=\"title\" data-df-signal='[{\"name\": \"signal.name\", \"on\": \"change\", \"value\": \"title\", \"opts\": {\"id\": 42} }]'>\n    </form>```\n    or, using the Django templating system:\n    ```html\n    {% load df_websockets %}\n    <form>\n        <input type=\"text\" name=\"title\" {% js_call \"signal.name\" on=\"change\" value=\"title\" id=42 %}>\n    </form>```\n\n    When the field \"title\" is modified, a signal \"signal.name\" is triggered on the server (via the websocket) with\n    the following arguments:\n    ```python\n    title = \"new title value\"\n    id = 42\n    ```\n     */\n    evt.target.querySelectorAll(\"[data-df-signal]\").forEach(function (target) {\n        var signals = JSON.parse(target.getAttribute(\"data-df-signal\"));\n        signals.forEach(function (signal) {\n            var eventName = signal.on;\n            if (!eventName) {\n                if (target.tagName === \"FORM\") {\n                    eventName = \"submit\";\n                }\n                else if ((target.tagName === \"INPUT\" && !(target.type === 'reset' || target.type === 'submit' || target.type === 'button')) || (target.tagName === \"TEXTAREA\")) {\n                    eventName = \"change\";\n                }\n                else {\n                    eventName = \"click\";\n                }\n            }\n            var callback = function (evt) {\n                // noinspection JSUnresolvedVariable\n                var prevent = signal.prevent;\n                var opts = signal.opts || {};\n                if (signal.form) {\n                    opts[signal.form] = serializeForm(target);\n                }\n                if (signal.value) {\n                    if (target.type === \"file\") { // just returns the name of selected files\n                        opts[signal.value] = [];\n                        for (var n = 0; n < target.files.length; n++) {\n                            opts[signal.value].push(target.files[n].name);\n                        }\n                    }\n                    else if (target.type === 'select-multiple') { // get all selected options\n                        opts[signal.value] = [];\n                        for (var n = 0; n < target.selectedOptions.length; n++) {\n                            opts[signal.value].push(target.selectedOptions[n].value);\n                        }\n                    }\n                    else if (target.type === 'checkbox' || target.type === 'radio') {\n                        opts[signal.value] = target.checked;\n                    }\n                    else {\n                        opts[signal.value] = target.value;\n                    }\n                }\n                window.DFSignals.call(signal.name, opts);\n                if (prevent === true || (prevent === null && eventName !== \"change\")) {\n                    evt.preventDefault();\n                }\n            };\n            target.addEventListener(eventName, callback);\n        });\n    });\n}\ndocument.addEventListener(\"DOMContentAdded\", function (evt) {\n    window.setTimeout(function () {\n        DOMContentAdded(evt);\n    }, 200);\n    // awful trick for being sure that our addEventListener is the last.\n    // allows things like CKEditor to push its content to the textarea before sending the content of the form.\n});\ndocument.addEventListener(\"DOMContentLoaded\", function (evt) {\n    window.setTimeout(function () {\n        DOMContentAdded(evt);\n    }, 200);\n    // awful trick for being sure that our addEventListener is the last.\n    // allows things like CKEditor to push its content to the textarea before sending the content of the form.\n});\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// startup\n// Load entry module and return exports\n__webpack_require__(821);\n__webpack_require__(947);\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(125);\n"],"names":["window","DFSignals","connection","buffer","registry","wsurl","document","addEventListener","websocketConnect","dfWsURL","cname","name","ca","decodeURIComponent","cookie","split","i","length","c","charAt","substring","indexOf","getCookie","console","info","WebSocket","onopen","send","onmessage","e","debug","data","msg","JSON","parse","signal","signal_id","call","opts","onerror","error","onclose","setTimeout","id","undefined","stringify","push","connect","fn","htmlAfter","querySelectorAll","selector","forEach","elt","originalNextSibling","nextSibling","insertAdjacentHTML","content","sibling","dispatchEvent","Event","bubbles","htmlAppend","originalLastChild","lastChild","child","previousSibling","htmlPrepend","originalFirstChild","firstChild","htmlBefore","originalPreviousSibling","htmlContent","innerHTML","htmlReplaceWith","parentNode","outerHTML","htmlEmpty","removeChild","htmlRemove","htmlText","textContent","htmlAddClass","classList","add","class_name","htmlRemoveClass","remove","htmlRemoveAttr","removeAttribute","attr_name","htmlAddAttribute","setAttribute","attr_value","htmlBooleanAttribute","value","htmlDownloadFile","save","createElement","href","url","target","download","filename","evt","MouseEvent","view","cancelable","URL","webkitURL","revokeObjectURL","htmlFocus","querySelector","focus","preventScroll","htmlFormsSet","form","values","item","elements","namedItem","RadioNodeList","input","checked","Array","isArray","valuesSet_1","Set","has","HTMLTextAreaElement","HTMLInputElement","type","HTMLSelectElement","options","valuesSet","selected","setFormFieldValue","DOMContentAdded","getAttribute","eventName","on","tagName","prevent","serialized","field","disabled","n","files","selectedOptions","serializeForm","preventDefault","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","d","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty"],"sourceRoot":""}