{"version":3,"file":"df_websockets/static/js/df_websockets.min.js","mappings":"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","sources":["webpack://@d9pouces/df_websockets/./npm/forms.ts","webpack://@d9pouces/df_websockets/./npm/app.js","webpack://@d9pouces/df_websockets/./npm/html.js","webpack://@d9pouces/df_websockets/./npm/base.js","webpack://@d9pouces/df_websockets/webpack/bootstrap","webpack://@d9pouces/df_websockets/webpack/runtime/define property getters","webpack://@d9pouces/df_websockets/webpack/runtime/hasOwnProperty shorthand","webpack://@d9pouces/df_websockets/webpack/startup"],"sourcesContent":["export function serializeForm(form) {\n    /*\n    Serialize a HTMLFormElement as a list of {name: <field name>, value: <field value>}\n    disabled/reset/submit/buttonf fields are ignored\n     */\n    var serialized = [];\n    // Loop through each field in the form\n    for (var i = 0; i < form.elements.length; i++) {\n        var field = form.elements[i];\n        // Respect the same rules as jQuery's serializeArray\n        if (!field.name || field.disabled || field.type === 'reset' || field.type === 'submit' || field.type === 'button') {\n            continue;\n        }\n        if (field.type === \"file\") { // just returns the name of selected files\n            for (var n = 0; n < field.files.length; n++) {\n                serialized.push({ name: field.name, value: field.files[n].name });\n            }\n        }\n        else if (field.type === 'select-multiple') { // get all selected options\n            for (var n = 0; n < field.selectedOptions.length; n++) {\n                serialized.push({ name: field.name, value: field.selectedOptions[n].value });\n            }\n        }\n        else if ((field.type !== 'checkbox' && field.type !== 'radio') || field.checked) {\n            serialized.push({ name: field.name, value: field.value });\n        }\n    }\n    return serialized;\n}\nexport function htmlFormsSet(opts) {\n    function setFormFieldValue(form, name, value) {\n        var item = form.elements.namedItem(name);\n        if (item === null) {\n            return;\n        }\n        else if (item instanceof RadioNodeList) {\n            if ((value === true) || (value === false)) {\n                item.forEach(function (input) {\n                    input.checked = value;\n                });\n            }\n            else if (Array.isArray(value)) {\n                var valuesSet_1 = new Set(value);\n                item.forEach(function (input) {\n                    input.checked = valuesSet_1.has(input.value);\n                });\n            }\n            else {\n                item.forEach(function (input) {\n                    input.checked = input.value === value;\n                });\n            }\n        }\n        else if (item instanceof HTMLTextAreaElement) {\n            item.value = value;\n        }\n        else if ((item instanceof HTMLInputElement) && (item.type === \"checkbox\")) {\n            if (value === true) {\n                item.checked = true;\n            }\n            else if (value === false) {\n                item.checked = false;\n            }\n            else {\n                item.value = value;\n            }\n        }\n        else if (item instanceof HTMLSelectElement) {\n            var options = item.options;\n            if (Array.isArray(value)) {\n                var valuesSet = new Set(value);\n                for (var i = 0; i < options.length; i++) {\n                    options[i].selected = valuesSet.has(options[i].value);\n                }\n            }\n            else {\n                for (var i = 0; i < options.length; i++) {\n                    options[i].selected = options[i].value === value;\n                }\n            }\n        }\n        else if (item instanceof HTMLInputElement) {\n            item.value = value;\n        }\n    }\n    document.querySelectorAll(opts.selector).forEach(function (form) {\n        opts.values.forEach(function (values) {\n            setFormFieldValue(form, values.name, values.value);\n        });\n    });\n}\n(function () {\n    function DOMContentAdded(evt) {\n        /*\n        search all HTML elements with an attribute \"data-df-signal\" that contains a JSON list of Signal objects:\n        {\n            name: \"name of the signal to call\",  (required)\n            on: \"name of the listened event\",\n            opts: \"extra options\",               (optional)\n            form: \"name of option to add to opts that contains the serialized form\",  (optional)\n            value: \"name of option to add to opts that contains the value\",  (optional)\n            prevent: preventDefault               (optional, defaults to true for on==\"submit\" or \"click\" else false )\n        }\n\n        When the listened event is not given, the listened event is\n            * \"submit\" for forms,\n            * \"click\" for \"reset\"/\"submit\"/\"button\" input fields,\n            * \"change\" for other fields.\n\n        Using on a HTML form:\n        ```html\n        <form data-df-signal='[{\"name\": \"signal.name\", \"on\": \"change\", \"form\": \"form_data\", \"opts\": {\"id\": 42} }]'>\n            <input type=\"text\" name=\"title\" value=\"df_websockets\">\n        </form>```\n        or, using the Django templating system:\n        ```html\n        {% load df_websockets %}\n        <form {% js_call \"signal.name\" on=\"change\" form=\"form_data\" id=42 %}>\n            <input type=\"text\" name=\"title\" value=\"df_websockets\">\n        </form>```\n\n        When the field \"title\" is modified, a signal \"signal.name\" is triggered on the server (via the websocket) with\n        the following arguments:\n        ```python\n        form_data = [{\"name\": \"title\", \"value\": \"df_websockets\"}]\n        id = 42\n        ```\n\n        Using on a HTML form input field:\n        ```html\n        <form>\n            <input type=\"text\" name=\"title\" data-df-signal='[{\"name\": \"signal.name\", \"on\": \"change\", \"value\": \"title\", \"opts\": {\"id\": 42} }]'>\n        </form>```\n        or, using the Django templating system:\n        ```html\n        {% load df_websockets %}\n        <form>\n            <input type=\"text\" name=\"title\" {% js_call \"signal.name\" on=\"change\" value=\"title\" id=42 %}>\n        </form>```\n\n        When the field \"title\" is modified, a signal \"signal.name\" is triggered on the server (via the websocket) with\n        the following arguments:\n        ```python\n        title = \"new title value\"\n        id = 42\n        ```\n         */\n        evt.target.querySelectorAll(\"[data-df-signal]\").forEach(function (target) {\n            var signals = JSON.parse(target.getAttribute(\"data-df-signal\"));\n            signals.forEach(function (signal) {\n                var eventName = signal.on;\n                if (!eventName) {\n                    if (target.tagName === \"FORM\") {\n                        eventName = \"submit\";\n                    }\n                    else if ((target.tagName === \"INPUT\" && !(target.type === 'reset' || target.type === 'submit' || target.type === 'button')) || (target.tagName === \"TEXTAREA\")) {\n                        eventName = \"change\";\n                    }\n                    else {\n                        eventName = \"click\";\n                    }\n                }\n                var callback = function (evt) {\n                    // noinspection JSUnresolvedVariable\n                    var prevent = signal.prevent;\n                    var opts = signal.opts || {};\n                    if (signal.form) {\n                        opts[signal.form] = serializeForm(target);\n                    }\n                    if (signal.value) {\n                        if (target.type === \"file\") { // just returns the name of selected files\n                            opts[signal.value] = [];\n                            for (var n = 0; n < target.files.length; n++) {\n                                opts[signal.value].push(target.files[n].name);\n                            }\n                        }\n                        else if (target.type === 'select-multiple') { // get all selected options\n                            opts[signal.value] = [];\n                            for (var n = 0; n < target.selectedOptions.length; n++) {\n                                opts[signal.value].push(target.selectedOptions[n].value);\n                            }\n                        }\n                        else if (target.type === 'checkbox' || target.type === 'radio') {\n                            opts[signal.value] = target.checked;\n                        }\n                        else {\n                            opts[signal.value] = target.value;\n                        }\n                    }\n                    window.DFSignals.call(signal.name, opts, undefined);\n                    if (prevent === true || (prevent === null && eventName !== \"change\")) {\n                        evt.preventDefault();\n                    }\n                };\n                target.addEventListener(eventName, callback);\n            });\n        });\n    }\n    document.addEventListener(\"DOMContentAdded\", function (evt) {\n        window.setTimeout(function () {\n            DOMContentAdded(evt);\n        }, 200);\n        // awful trick for being sure that our addEventListener is the last.\n        // allows things like CKEditor to push its content to the textarea before sending the content of the form.\n    });\n    document.addEventListener(\"DOMContentLoaded\", function (evt) {\n        window.setTimeout(function () {\n            DOMContentAdded(evt);\n        }, 200);\n        // awful trick for being sure that our addEventListener is the last.\n        // allows things like CKEditor to push its content to the textarea before sending the content of the form.\n    });\n})();\n","////////////////////////////////////////////////////////////////////////////////\n// This file is part of df_websockets                                          /\n//                                                                             /\n// Copyright (C) 2020 Matthieu Gallet <github@19pouces.net>                    /\n// All Rights Reserved                                                         /\n//                                                                             /\n// You may use, distribute and modify this code under the                      /\n// terms of the (BSD-like) CeCILL-B license.                                   /\n//                                                                             /\n// You should have received a copy of the CeCILL-B license with                /\n// this file. If not, please visit:                                            /\n// https://cecill.info/licences/Licence_CeCILL-B_V1-en.txt (English)           /\n// or https://cecill.info/licences/Licence_CeCILL-B_V1-fr.txt (French)         /\n//                                                                             /\n////////////////////////////////////////////////////////////////////////////////\n(() => {\n\n  window.DFSignals = {\n    connection: null,\n    buffer: [],\n    registry: {},\n    wsurl: null\n  };\n\n  function getCookie(cname) {\n    const name = cname + \"=\";\n    const decodedCookie = decodeURIComponent(document.cookie);\n    const ca = decodedCookie.split(';');\n    for (let i = 0; i < ca.length; i++) {\n      let c = ca[i];\n      while (c.charAt(0) === ' ') {\n        c = c.substring(1);\n      }\n      if (c.indexOf(name) === 0) {\n        return c.substring(name.length, c.length);\n      }\n    }\n    return \"\";\n  }\n\n  function websocketConnect() {\n    const cookieName = \"dfwsurl\";\n    if (window.DFSignals.wsurl === null) {\n      const dfWsURL = getCookie(cookieName);\n      window.DFSignals.wsurl = decodeURIComponent(dfWsURL);\n    }\n    if (!window.DFSignals.wsurl) {\n      console.info(\"Unable to get the websocket URL in the '\" + cookieName + \"' cookie.\");\n      return;\n    }\n    const connection = new WebSocket(window.DFSignals.wsurl);\n    /* cannot use header or cookies (cookies may change after the initial connection)\n    *  so we use GET parameter\n    *  */\n    connection.onopen = () => {\n      window.DFSignals.connection = connection;\n      for (let i = 0; i < window.DFSignals.buffer.length; i++) {\n        connection.send(window.DFSignals.buffer[i]);\n      }\n      window.DFSignals.buffer = [];\n    };\n    connection.onmessage = (e) => {\n      console.debug('received call ' + e.data + ' from server.')\n      const msg = JSON.parse(e.data);\n      // noinspection JSUnresolvedVariable\n      if (msg.signal && msg.signal_id) {\n        window.DFSignals.call(msg.signal, msg.opts, msg.signal_id);\n      }\n    };\n    connection.onerror = (e) => {\n      console.error(\"WS error: \" + e);\n    };\n    connection.onclose = () => {\n      window.DFSignals.connection = null;\n      setTimeout(websocketConnect, 3000);\n    }\n  }\n\n  function call(signal, opts, id) {\n    /*\"\"\"\n    .. function:: call(signal, opts, id)\n\n        Call a signal.\n        If the signal is also defined in the Python server and available to the user, then the Python signal is also triggered.\n\n        :param string signal: Name of the called signal.\n        :param object opts: Object with signal arguments.\n        :param string id: Unique id of each signal triggered by the server. Do not use it yourself.\n        :returns: always `false`.\n    */\n    // if (window.DFSignals.registry[signal] === undefined) {\n    //     console.debug('unknown call \"' + signal + '\" (from both client and server).');\n    //     return false;\n    // } else\n    if ((id !== undefined) && (window.DFSignals.registry[id] !== undefined)) {\n      return false;\n    } else if (id !== undefined) {\n      window.DFSignals.registry[id] = true;\n    }\n    if (window.DFSignals.registry[signal] !== undefined) {\n      console.debug('call \"' + signal + '\"', opts);\n      for (let i = 0; i < window.DFSignals.registry[signal].length; i += 1) {\n        window.DFSignals.registry[signal][i](opts, id);\n      }\n    }\n    if (id === undefined) {\n      console.debug('call from client: \"' + signal + '\"', opts);\n      const msg = JSON.stringify({signal: signal, opts: opts});\n      if (window.DFSignals.connection) {\n        window.DFSignals.connection.send(msg);\n      } else {\n        window.DFSignals.buffer.push(msg);\n      }\n    }\n\n    return false;\n  }\n\n  function connect(signal, fn) {\n    /*\"\"\"\n    .. function:: connect(signal, fn)\n\n        Connect a javascript code to the given signal name.\n\n        :param string signal: Name of the signal.\n        :param function fn: Function that takes a single object as argument. The properties of this object are the signal arguments.\n        :returns: nothing.\n    */\n    if (window.DFSignals.registry[signal] === undefined) {\n      window.DFSignals.registry[signal] = [];\n    }\n    window.DFSignals.registry[signal].push(fn);\n  }\n\n  document.addEventListener(\"DOMContentLoaded\", websocketConnect);\n\n  window.DFSignals.call = call;\n  window.DFSignals.connect = connect;\n\n})();\n","////////////////////////////////////////////////////////////////////////////////\n// This file is part of df_websockets                                          /\n//                                                                             /\n// Copyright (C) 2020 Matthieu Gallet <github@19pouces.net>                    /\n// All Rights Reserved                                                         /\n//                                                                             /\n// You may use, distribute and modify this code under the                      /\n// terms of the (BSD-like) CeCILL-B license.                                   /\n//                                                                             /\n// You should have received a copy of the CeCILL-B license with                /\n// this file. If not, please visit:                                            /\n// https://cecill.info/licences/Licence_CeCILL-B_V1-en.txt (English)           /\n// or https://cecill.info/licences/Licence_CeCILL-B_V1-fr.txt (French)         /\n//                                                                             /\n////////////////////////////////////////////////////////////////////////////////\n\nexport const htmlAfter = opts => {\n    document.querySelectorAll(opts.selector).forEach(elt => {\n        const originalNextSibling = elt.nextSibling;\n        elt.insertAdjacentHTML('afterend', opts.content);\n        let sibling = elt.nextSibling;\n        while (sibling && (sibling !== originalNextSibling)) {\n            sibling.dispatchEvent(new Event('DOMContentAdded', {bubbles: true}));\n            sibling = sibling.nextSibling;\n        }\n    });\n};\nexport const htmlAppend = opts => {\n    document.querySelectorAll(opts.selector).forEach(elt => {\n        const originalLastChild = elt.lastChild;\n        elt.insertAdjacentHTML('beforeend', opts.content);\n        let child = elt.lastChild;\n        while (child && (child !== originalLastChild)) {\n            child.dispatchEvent(new Event('DOMContentAdded', {bubbles: true}));\n            child = child.previousSibling;\n        }\n    });\n};\nexport const htmlPrepend = opts => {\n    document.querySelectorAll(opts.selector).forEach(elt => {\n        const originalFirstChild = elt.firstChild;\n        elt.insertAdjacentHTML('afterbegin', opts.content);\n        let child = elt.firstChild;\n        while (child && (child !== originalFirstChild)) {\n            child.dispatchEvent(new Event('DOMContentAdded', {bubbles: true}));\n            child = child.nextSibling;\n        }\n    });\n};\nexport const htmlBefore = opts => {\n    document.querySelectorAll(opts.selector).forEach(elt => {\n        const originalPreviousSibling = elt.previousSibling;\n        elt.insertAdjacentHTML('beforebegin', opts.content);\n        let sibling = elt.previousSibling;\n        while (sibling && (sibling !== originalPreviousSibling)) {\n            sibling.dispatchEvent(new Event('DOMContentAdded', {bubbles: true}));\n            sibling = sibling.previousSibling;\n        }\n    });\n};\nexport const htmlContent = (opts) => {\n    document.querySelectorAll(opts.selector).forEach(elt => {\n        elt.innerHTML = opts.content;\n        let child = elt.firstChild;\n        while (child) {\n            child.dispatchEvent(new Event('DOMContentAdded', {bubbles: true}));\n            child = child.nextSibling;\n        }\n    });\n};\nexport const htmlReplaceWith = (opts) => {\n    document.querySelectorAll(opts.selector).forEach(elt => {\n        const previousSibling = elt.previousSibling;\n        const nextSibling = elt.nextSibling;\n        const parentNode = elt.parentNode;\n        elt.outerHTML = opts.content;\n        let sibling = parentNode.firstChild;\n        if (previousSibling) {\n            sibling = previousSibling.nextSibling;\n        }\n        while (sibling && (sibling !== nextSibling)) {\n            sibling.dispatchEvent(new Event('DOMContentAdded', {bubbles: true}));\n            sibling = sibling.nextSibling;\n        }\n    });\n};\nexport const htmlEmpty = opts => {\n    document.querySelectorAll(opts.selector).forEach(elt => {\n        while (elt.firstChild) {\n            elt.removeChild(elt.firstChild);\n        }\n    });\n};\nexport const htmlRemove = opts => {\n    document.querySelectorAll(opts.selector).forEach(elt => {\n        elt.parentNode.removeChild(elt);\n    });\n};\nexport const htmlText = (opts) => {\n    document.querySelectorAll(opts.selector).forEach(elt => {\n        elt.textContent = opts.content;\n    });\n};\n","////////////////////////////////////////////////////////////////////////////////\n// This file is part of df_websockets                                          /\n//                                                                             /\n// Copyright (C) 2020 Matthieu Gallet <github@19pouces.net>                    /\n// All Rights Reserved                                                         /\n//                                                                             /\n// You may use, distribute and modify this code under the                      /\n// terms of the (BSD-like) CeCILL-B license.                                   /\n//                                                                             /\n// You should have received a copy of the CeCILL-B license with                /\n// this file. If not, please visit:                                            /\n// https://cecill.info/licences/Licence_CeCILL-B_V1-en.txt (English)           /\n// or https://cecill.info/licences/Licence_CeCILL-B_V1-fr.txt (French)         /\n//                                                                             /\n////////////////////////////////////////////////////////////////////////////////\n\nimport {htmlFormsSet} from \"./forms\";\nimport {\n  htmlAfter,\n  htmlAppend,\n  htmlBefore,\n  htmlContent,\n  htmlEmpty,\n  htmlPrepend,\n  htmlRemove,\n  htmlReplaceWith, htmlText\n} from \"./html\";\n\n(\n  () => {\n    const htmlAddClass = opts => {\n      document.querySelectorAll(opts.selector).forEach(elt => {\n        // noinspection JSUnresolvedVariable\n        elt.classList.add(opts.class_name)\n      });\n    };\n    const htmlRemoveClass = (opts) => {\n      document.querySelectorAll(opts.selector).forEach(elt => {\n        // noinspection JSUnresolvedVariable\n        elt.classList.remove(opts.class_name);\n      });\n    };\n    const htmlRemoveAttr = (opts) => {\n      document.querySelectorAll(opts.selector).forEach(elt => {\n        // noinspection JSUnresolvedVariable\n        elt.removeAttribute(opts.attr_name);\n      });\n    };\n    const htmlAddAttribute = (opts) => {\n      document.querySelectorAll(opts.selector).forEach(elt => {\n        // noinspection JSUnresolvedVariable\n        elt.setAttribute(opts.attr_name, opts.attr_value);\n      });\n    };\n    const htmlBooleanAttribute = (opts) => {\n      document.querySelectorAll(opts.selector).forEach(elt => {\n        if (opts.value) {\n          elt.setAttribute(opts.name, opts.name);\n        } else {\n          elt.removeAttribute(opts.name)\n        }\n      });\n    };\n    const htmlDownloadFile = (opts) => {\n      const save = document.createElement('a');\n      save.href = opts.url;\n      save.target = '_blank';\n      save.download = opts.filename || 'unknown';\n      const evt = new MouseEvent('click', {view: window, bubbles: true, cancelable: false});\n      save.dispatchEvent(evt);\n      (window.URL || window.webkitURL).revokeObjectURL(save.href);\n    };\n    const htmlFocus = (opts) => {\n      const elt = document.querySelector(opts.selector);\n      if (elt) {\n        elt.focus({preventScroll: false});\n      }\n    };\n\n    function connectSignals() {\n\n      window.DFSignals.connect('html.after', htmlAfter);\n      /*\"\"\"\n      .. function:: html.after(opts)\n\n          Insert content, specified by the parameter, after each element in the set of matched elements.\n          Equivalent to `$().after()` or `.insertAdjacentHTML('afterend', ...)`.\n          Trigger a `DOMContentAdded` event on the added content.\n\n          .. code-block:: javascript\n\n              window.DFSignals.call('html.after', {selector: \"#obj\", content: \"<span>hello</span>\"});\n\n          .. code-block:: python\n\n              trigger(window_info, 'html.after', to=WINDOW, selector=\"#obj\", content=\"<span>hello</span>\")\n\n          :param string selector: HTML selector\n          :param string content: new HTML content\n\n      */\n\n      window.DFSignals.connect('html.append', htmlAppend);\n      /*\"\"\"\n      .. function:: html.append(opts)\n\n          Insert content, specified by the parameter, to the end of each element in the set of matched elements.\n          Equivalent to `$().append()` or `.insertAdjacentHTML('beforeend', ...)`.\n          Trigger a `DOMContentAdded` event on the added content.\n\n          .. code-block:: javascript\n\n              window.DFSignals.call('html.append', {selector: \"#obj\", content: \"<span>hello</span>\"});\n\n          .. code-block:: python\n\n              trigger(window_info, 'html.append', to=WINDOW, selector=\"#obj\", content=\"<span>hello</span>\")\n\n          :param string selector: HTML selector\n          :param string content: new HTML content\n\n      */\n\n      window.DFSignals.connect('html.prepend', htmlPrepend);\n\n      /*\"\"\"\n      .. function:: html.prepend(opts)\n\n          Insert content, specified by the parameter, to the beginning of each element in the set of matched elements.\n          Equivalent to `$().prepend()` or `.insertAdjacentHTML('afterbegin', ...)`.\n          Trigger a `DOMContentAdded` event on the added content.\n\n          .. code-block:: javascript\n\n              window.DFSignals.call('html.prepend', {selector: \"#obj\", content: \"<span>hello</span>\"});\n\n          .. code-block:: python\n\n              trigger(window_info, 'html.prepend', to=WINDOW, selector=\"#obj\", content=\"<span>hello</span>\")\n\n          :param string selector: HTML selector\n          :param string content: new HTML content\n\n      */\n\n      window.DFSignals.connect('html.before', htmlBefore);\n      /*\"\"\"\n      .. function:: html.before(opts)\n\n          Insert content, specified by the parameter, before each element in the set of matched elements..\n          Equivalent to `$().before()` or `.insertAdjacentHTML('beforebegin', ...)`.\n          Trigger a `DOMContentAdded` event on the added content.\n\n          .. code-block:: javascript\n\n              window.DFSignals.call('html.before', {selector: \"#obj\", content: \"<span>hello</span>\"});\n\n          .. code-block:: python\n\n              trigger(window_info, 'html.before', to=WINDOW, selector=\"#obj\", content=\"<span>hello</span>\")\n\n          :param string selector: HTML selector\n          :param string content: new HTML content\n\n      */\n      window.DFSignals.connect('html.content', htmlContent);\n      /*\"\"\"\n      .. function:: html.content(opts)\n\n          set the HTML contents of every matched element.\n\n          .. code-block:: javascript\n\n              window.DFSignals.call('html.content', {selector: \"#obj\", content: \"<span>hello</span>\"});\n\n          .. code-block:: python\n\n              trigger(window_info, 'html.content', to=WINDOW, selector=\"#obj\", content= \"<span>hello</span>\")\n\n\n          :param string selector: HTML selector\n          :param string content: new HTML content\n      */\n\n      window.DFSignals.connect('html.replace_with', htmlReplaceWith);\n      /*\"\"\"\n      .. function:: html.replace_with(opts)\n\n          Replace each element in the set of matched elements with the provided new content.\n\n          .. code-block:: javascript\n\n              window.DFSignals.call('html.replace_with', {selector: \"#obj\", content: \"<span>hello</span>\"});\n\n          .. code-block:: python\n\n              trigger(window_info, 'html.replace_with', to=WINDOW, selector=\"#obj\", content=\"<span>hello</span>\")\n\n          :param string selector: HTML selector\n          :param string content: new HTML content\n\n      */\n\n      window.DFSignals.connect('html.empty', htmlEmpty);\n      /*\"\"\"\n      .. function:: html.empty(opts)\n\n          Remove all child nodes of the set of matched elements from the DOM.\n\n          .. code-block:: javascript\n\n              window.DFSignals.call('html.empty', {selector: \"#obj\"});\n\n          .. code-block:: python\n\n              trigger(window_info, 'html.empty', to=WINDOW, selector=\"#obj\")\n\n          :param string selector: HTML selector\n\n      */\n\n      window.DFSignals.connect('html.remove', htmlRemove);\n      /*\"\"\"\n      .. function:: html.remove(opts)\n\n          Remove the set of matched elements from the DOM.\n\n          .. code-block:: javascript\n\n              window.DFSignals.call('html.remove', {selector: \"#obj\"});\n\n          .. code-block:: python\n\n              trigger(window_info, 'html.remove', to=WINDOW, selector=\"#obj\")\n\n          :param string selector: HTML selector\n\n      */\n\n      window.DFSignals.connect('html.add_class', htmlAddClass);\n      /*\"\"\"\n      .. function:: html.add_class(opts)\n\n          Adds the specified class(es) to each of the set of matched elements.\n\n          .. code-block:: javascript\n\n              window.DFSignals.call('html.add_class', {selector: \"#obj\", class_name: \"myclass\"});\n\n\n          .. code-block:: python\n\n              trigger(window_info, 'html.add_class', to=WINDOW, selector=\"#obj\", class_name=\"myclass\")\n\n\n          :param string selector: HTML selector\n          :param string class_name: new class\n\n      */\n      window.DFSignals.connect('html.remove_class', htmlRemoveClass);\n      /*\"\"\"\n      .. function:: html.remove_class(opts)\n\n          Remove a single class, multiple classes, or all classes from each element in the set of matched elements.\n\n          .. code-block:: javascript\n\n              window.DFSignals.call('html.remove_class', {selector: \"#obj\", class_name: \"class\"});\n\n          .. code-block:: python\n\n              trigger(window_info, 'html.remove_class', to=WINDOW, selector=\"#obj\", class_name=\"attr\")\n\n          :param string selector: HTML selector\n          :param string class_name: class to remove\n\n      */\n      window.DFSignals.connect('html.remove_attr', htmlRemoveAttr);\n      /*\"\"\"\n      .. function:: html.remove_attr(opts)\n\n          Remove an attribute from each element in the set of matched elements.\n\n          .. code-block:: javascript\n\n              window.DFSignals.call('html.remove_attr', {selector: \"#obj\", attr_name: \"attr\"});\n\n          .. code-block:: python\n\n              trigger(window_info, 'html.remove_attr', to=WINDOW, selector=\"#obj\", attr_name=\"attr\")\n\n          :param string selector: HTML selector\n          :param string attr_name: attribute to remove\n\n      */\n\n      window.DFSignals.connect('html.add_attribute', htmlAddAttribute);\n      /*\"\"\"\n      .. function:: html.add_attribute(opts)\n\n          Add an attribute to each element matched by the given selector.\n\n          .. code-block:: javascript\n\n              window.DFSignals.call('html.add_attribute', {selector: \"#obj\", attr_name: \"data-df\", attr_value: \"value\"});\n\n          .. code-block:: python\n\n              trigger(window_info, 'html.add_attribute', to=WINDOW, selector=\"#obj\", attr_name=\"data-df\", attr_value= \"value\")\n\n\n          :param string selector: HTML selector\n          :param string attr_name: name of the attribute to add\n          :param string attr_value: value of the attribute to add\n\n      */\n      window.DFSignals.connect('html.boolean_attribute', htmlBooleanAttribute);\n      /*\"\"\"\n      .. function:: html.boolean_attribute(opts)\n\n          Set or remove a boolean attribute. Always set the value of the added attribute to its name.\n\n          .. code-block:: javascript\n\n              window.DFSignals.call('html.boolean_attribute', {selector: \"#input\", name: \"checked\", value: true});\n\n          .. code-block:: python\n\n              trigger(window_info, 'html.boolean_attribute', to=WINDOW, selector=\"#input\", name=\"checked\", value=True)\n\n\n          :param string selector: HTML selector\n          :param string name: name of the attribute to add\n          :param string value: if True, add the attribute, if False, remove the attribute\n\n      */\n\n\n      window.DFSignals.connect('html.text', htmlText);\n      /*\"\"\"\n      .. function:: html.text(opts)\n\n          Set the text contents of the matched elements.\n\n          .. code-block:: javascript\n\n              window.DFSignals.call('html.text', {selector: \"#obj\", content: \"<span>hello</span>\"});\n\n          .. code-block:: python\n\n              trigger(window_info, 'html.text', to=WINDOW, selector=\"#obj\", content= \"<span>hello</span>\")\n\n\n          :param string selector: HTML selector\n          :param string content: new HTML content\n\n      */\n\n      window.DFSignals.connect('html.download_file', htmlDownloadFile);\n      /*\"\"\"\n      .. function:: html.download_file(opts)\n\n          Force the client to download the given file.\n\n          .. code-block:: javascript\n\n              window.DFSignals.call('html.download_file', {url: \"http://example.org/test.zip\", filename: \"test.zip\"});\n\n      .. code-block:: python\n\n          trigger(window_info, 'html.download_file', to=WINDOW, url=\"http://example.org/test.zip\", filename=\"test.zip\")\n\n          :param string url: URL of the file\n          :param string filename: name of the file\n\n      */\n\n\n      window.DFSignals.connect('html.focus', htmlFocus);\n      /*\"\"\"\n      .. function:: html.focus(opts)\n\n          Set the focus to the matched element.\n\n          .. code-block:: javascript\n\n              window.DFSignals.call('html.focus', {selector: \"#obj\"});\n\n          .. code-block:: python\n\n              trigger(window_info, 'html.focus', to=WINDOW, selector=\"#obj\")\n\n          :param string selector: HTML selector\n\n      */\n\n      window.DFSignals.connect('html.forms.set', htmlFormsSet);\n      /*\"\"\"\n      .. function:: html.forms.set(opts)\n\n          Set the value of a form input\n\n          .. code-block:: javascript\n\n              window.DFSignals.call('html.forms.set', {selector: \"[name=title]\", value: \"new title\"});\n\n          .. code-block:: python\n\n              trigger(window_info, 'html.forms.set', to=WINDOW, selector=\"[name=title]\", value=\"new_title\")\n\n          :param string selector: HTML selector\n\n      */\n    }\n\n    document.addEventListener(\"DOMContentLoaded\", connectSignals);\n  }\n)();\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// startup\n// Load entry module and return exports\n__webpack_require__(338);\n__webpack_require__(918);\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(330);\n"],"names":["htmlFormsSet","opts","document","querySelectorAll","selector","forEach","form","values","name","value","item","elements","namedItem","RadioNodeList","input","checked","Array","isArray","valuesSet_1","Set","has","HTMLTextAreaElement","HTMLInputElement","type","HTMLSelectElement","options","valuesSet","i","length","selected","setFormFieldValue","DOMContentAdded","evt","target","JSON","parse","getAttribute","signal","eventName","on","tagName","addEventListener","prevent","serialized","field","disabled","n","files","push","selectedOptions","serializeForm","window","DFSignals","call","undefined","preventDefault","setTimeout","connection","buffer","registry","wsurl","websocketConnect","dfWsURL","cname","ca","decodeURIComponent","cookie","split","c","charAt","substring","indexOf","getCookie","console","info","WebSocket","onopen","send","onmessage","e","debug","data","msg","signal_id","onerror","error","onclose","id","stringify","connect","fn","htmlAfter","elt","originalNextSibling","nextSibling","insertAdjacentHTML","content","sibling","dispatchEvent","Event","bubbles","htmlAppend","originalLastChild","lastChild","child","previousSibling","htmlPrepend","originalFirstChild","firstChild","htmlBefore","originalPreviousSibling","htmlContent","innerHTML","htmlReplaceWith","parentNode","outerHTML","htmlEmpty","removeChild","htmlRemove","htmlText","textContent","htmlAddClass","classList","add","class_name","htmlRemoveClass","remove","htmlRemoveAttr","removeAttribute","attr_name","htmlAddAttribute","setAttribute","attr_value","htmlBooleanAttribute","htmlDownloadFile","save","createElement","href","url","download","filename","MouseEvent","view","cancelable","URL","webkitURL","revokeObjectURL","htmlFocus","querySelector","focus","preventScroll","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","d","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty"],"sourceRoot":""}