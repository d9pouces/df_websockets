{"version":3,"file":"df_websockets/static/js/df_websockets.min.js","mappings":"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","sources":["webpack://@d9pouces/df_websockets/./df_websockets/app.js","webpack://@d9pouces/df_websockets/./df_websockets/html.js","webpack://@d9pouces/df_websockets/./df_websockets/base.js","webpack://@d9pouces/df_websockets/./df_websockets/forms.ts","webpack://@d9pouces/df_websockets/webpack/bootstrap","webpack://@d9pouces/df_websockets/webpack/runtime/define property getters","webpack://@d9pouces/df_websockets/webpack/runtime/hasOwnProperty shorthand","webpack://@d9pouces/df_websockets/webpack/startup"],"sourcesContent":["////////////////////////////////////////////////////////////////////////////////\n// This file is part of df_websockets                                          /\n//                                                                             /\n// Copyright (C) 2020 Matthieu Gallet <github@19pouces.net>                    /\n// All Rights Reserved                                                         /\n//                                                                             /\n// You may use, distribute and modify this code under the                      /\n// terms of the (BSD-like) CeCILL-B license.                                   /\n//                                                                             /\n// You should have received a copy of the CeCILL-B license with                /\n// this file. If not, please visit:                                            /\n// https://cecill.info/licences/Licence_CeCILL-B_V1-en.txt (English)           /\n// or https://cecill.info/licences/Licence_CeCILL-B_V1-fr.txt (French)         /\n//                                                                             /\n////////////////////////////////////////////////////////////////////////////////\n(() => {\n\n    window.DFSignals = {\n        connection: null,\n        buffer: [],\n        registry: {},\n        wsurl: null\n    };\n\n    function getCookie(cname) {\n        const name = cname + \"=\";\n        const decodedCookie = decodeURIComponent(document.cookie);\n        const ca = decodedCookie.split(';');\n        for (let i = 0; i < ca.length; i++) {\n            let c = ca[i];\n            while (c.charAt(0) === ' ') {\n                c = c.substring(1);\n            }\n            if (c.indexOf(name) === 0) {\n                return c.substring(name.length, c.length);\n            }\n        }\n        return \"\";\n    }\n\n    function websocketConnect() {\n        const cookieName = \"dfwsurl\";\n        const heartbeatMsg = '--heartbeat--';\n        const heartbeatDelay = 60000;\n        if (window.DFSignals.wsurl === null) {\n            const dfWsURL = getCookie(cookieName);\n            window.DFSignals.wsurl = decodeURIComponent(dfWsURL);\n        }\n        if (!window.DFSignals.wsurl) {\n            console.info(\"Unable to get the websocket URL in the '\" + cookieName + \"' cookie.\");\n            return;\n        }\n        const connection = new WebSocket(window.DFSignals.wsurl);\n        /* cannot use header or cookies (cookies may change after the initial connection)\n        *  so we use GET parameter\n        *  */\n        connection.heartbeatInterval = null;\n        connection.onopen = () => {\n            window.DFSignals.connection = connection;\n            for (let i = 0; i < window.DFSignals.buffer.length; i++) {\n                connection.send(window.DFSignals.buffer[i]);\n            }\n            connection.heartbeatInterval = setInterval(connection.sendHeartbeat, heartbeatDelay);\n            window.DFSignals.buffer = [];\n        };\n        connection.sendHeartbeat = () => {\n            try {\n                connection.send(heartbeatMsg);\n            } catch (e) {\n                console.warn(\"Unable to send heartbeat, reason: \" + e.message);\n            }\n        };\n        connection.onmessage = (e) => {\n            if (e.data === heartbeatMsg) {\n                console.debug('heartbeat received')\n                return;\n            }\n            console.debug('received call ' + e.data + ' from server.')\n            const msg = JSON.parse(e.data);\n            // noinspection JSUnresolvedVariable\n            if (msg.signal && msg.signal_id) {\n                window.DFSignals.call(msg.signal, msg.opts, msg.signal_id);\n            }\n        };\n        connection.onerror = (e) => {\n            console.error(\"WS error: \" + e);\n        };\n        connection.onclose = (event) => {\n            window.DFSignals.connection = null;\n            if (connection.heartbeatInterval !== null) {\n                clearInterval(connection.heartbeatInterval);\n            }\n            console.debug(\"WebSocket connection closed: \" + event.code + \" \" + event.reason);\n            setTimeout(websocketConnect, 3000);\n        }\n        addEventListener(\"beforeunload\", () => {\n            connection.close();\n        });\n\n    }\n\n    function call(signal, opts, id) {\n        /*\"\"\"\n        .. function:: call(signal, opts, id)\n\n            Call a signal.\n            If the signal is also defined in the Python server and available to the user, then the Python signal is also triggered.\n\n            :param string signal: Name of the called signal.\n            :param object opts: Object with signal arguments.\n            :param string id: Unique id of each signal triggered by the server. Do not use it yourself.\n            :returns: always `false`.\n        */\n        // if (window.DFSignals.registry[signal] === undefined) {\n        //     console.debug('unknown call \"' + signal + '\" (from both client and server).');\n        //     return false;\n        // } else\n        if ((id !== undefined) && (window.DFSignals.registry[id] !== undefined)) {\n            return false;\n        } else if (id !== undefined) {\n            window.DFSignals.registry[id] = true;\n        }\n        if (window.DFSignals.registry[signal] !== undefined) {\n            console.debug('call \"' + signal + '\"', opts);\n            for (let i = 0; i < window.DFSignals.registry[signal].length; i += 1) {\n                window.DFSignals.registry[signal][i](opts, id);\n            }\n        }\n        if (id === undefined) {\n            console.debug('call from client: \"' + signal + '\"', opts);\n            const msg = JSON.stringify({signal: signal, opts: opts});\n            if (window.DFSignals.connection) {\n                window.DFSignals.connection.send(msg);\n            } else {\n                window.DFSignals.buffer.push(msg);\n            }\n        }\n\n        return false;\n    }\n\n    function connect(signal, fn) {\n        /*\"\"\"\n        .. function:: connect(signal, fn)\n\n            Connect a javascript code to the given signal name.\n\n            :param string signal: Name of the signal.\n            :param function fn: Function that takes a single object as argument. The properties of this object are the signal arguments.\n            :returns: nothing.\n        */\n        if (window.DFSignals.registry[signal] === undefined) {\n            window.DFSignals.registry[signal] = [];\n        }\n        window.DFSignals.registry[signal].push(fn);\n    }\n\n    document.addEventListener(\"DOMContentLoaded\", websocketConnect);\n\n    window.DFSignals.call = call;\n    window.DFSignals.connect = connect;\n\n})();\n","////////////////////////////////////////////////////////////////////////////////\n// This file is part of df_websockets                                          /\n//                                                                             /\n// Copyright (C) 2020 Matthieu Gallet <github@19pouces.net>                    /\n// All Rights Reserved                                                         /\n//                                                                             /\n// You may use, distribute and modify this code under the                      /\n// terms of the (BSD-like) CeCILL-B license.                                   /\n//                                                                             /\n// You should have received a copy of the CeCILL-B license with                /\n// this file. If not, please visit:                                            /\n// https://cecill.info/licences/Licence_CeCILL-B_V1-en.txt (English)           /\n// or https://cecill.info/licences/Licence_CeCILL-B_V1-fr.txt (French)         /\n//                                                                             /\n////////////////////////////////////////////////////////////////////////////////\n\nexport const htmlAfter = opts => {\n    document.querySelectorAll(opts.selector).forEach(elt => {\n        const originalNextSibling = elt.nextSibling;\n        elt.insertAdjacentHTML('afterend', opts.content);\n        let sibling = elt.nextSibling;\n        while (sibling && (sibling !== originalNextSibling)) {\n            if (sibling.querySelectorAll) {\n                sibling.dispatchEvent(new Event('DOMContentAdded', {bubbles: true}));\n            }\n            sibling = sibling.nextSibling;\n        }\n    });\n};\nexport const htmlAppend = opts => {\n    document.querySelectorAll(opts.selector).forEach(elt => {\n        const originalLastChild = elt.lastChild;\n        elt.insertAdjacentHTML('beforeend', opts.content);\n        let child = elt.lastChild;\n        while (child && (child !== originalLastChild)) {\n            if (child.querySelectorAll) {\n                child.dispatchEvent(new Event('DOMContentAdded', {bubbles: true}));\n            }\n            child = child.previousSibling;\n        }\n    });\n};\nexport const htmlPrepend = opts => {\n    document.querySelectorAll(opts.selector).forEach(elt => {\n        const originalFirstChild = elt.firstChild;\n        elt.insertAdjacentHTML('afterbegin', opts.content);\n        let child = elt.firstChild;\n        while (child && (child !== originalFirstChild)) {\n            if (child.querySelectorAll) {\n                child.dispatchEvent(new Event('DOMContentAdded', {bubbles: true}));\n            }\n            child = child.nextSibling;\n        }\n    });\n};\nexport const htmlBefore = opts => {\n    document.querySelectorAll(opts.selector).forEach(elt => {\n        const originalPreviousSibling = elt.previousSibling;\n        elt.insertAdjacentHTML('beforebegin', opts.content);\n        let sibling = elt.previousSibling;\n        while (sibling && (sibling !== originalPreviousSibling)) {\n            if (sibling.querySelectorAll) {\n                sibling.dispatchEvent(new Event('DOMContentAdded', {bubbles: true}));\n            }\n            sibling = sibling.previousSibling;\n        }\n    });\n};\nexport const htmlContent = (opts) => {\n    document.querySelectorAll(opts.selector).forEach(elt => {\n        elt.innerHTML = opts.content;\n        let child = elt.firstChild;\n        while (child) {\n            if (child.querySelectorAll) {\n                child.dispatchEvent(new Event('DOMContentAdded', {bubbles: true}));\n            }\n            child = child.nextSibling;\n        }\n    });\n};\nexport const htmlReplaceWith = (opts) => {\n    document.querySelectorAll(opts.selector).forEach(elt => {\n            const previousSibling = elt.previousSibling;\n            const nextSibling = elt.nextSibling;\n            const parentNode = elt.parentNode;\n            elt.outerHTML = opts.content;\n            let sibling = parentNode.firstChild;\n            if (previousSibling) {\n                sibling = previousSibling.nextSibling;\n            }\n            while (sibling && (sibling !== nextSibling)) {\n                if (sibling.querySelectorAll) {\n                    sibling.dispatchEvent(new Event('DOMContentAdded', {bubbles: true}));\n                }\n                sibling = sibling.nextSibling;\n            }\n        }\n    )\n    ;\n};\nexport const htmlEmpty = opts => {\n    document.querySelectorAll(opts.selector).forEach(elt => {\n        while (elt.firstChild) {\n            elt.removeChild(elt.firstChild);\n        }\n    });\n};\nexport const htmlRemove = opts => {\n    document.querySelectorAll(opts.selector).forEach(elt => {\n        elt.parentNode.removeChild(elt);\n    });\n};\nexport const htmlText = (opts) => {\n    document.querySelectorAll(opts.selector).forEach(elt => {\n        elt.textContent = opts.content;\n    });\n};\n","////////////////////////////////////////////////////////////////////////////////\n// This file is part of df_websockets                                          /\n//                                                                             /\n// Copyright (C) 2020 Matthieu Gallet <github@19pouces.net>                    /\n// All Rights Reserved                                                         /\n//                                                                             /\n// You may use, distribute and modify this code under the                      /\n// terms of the (BSD-like) CeCILL-B license.                                   /\n//                                                                             /\n// You should have received a copy of the CeCILL-B license with                /\n// this file. If not, please visit:                                            /\n// https://cecill.info/licences/Licence_CeCILL-B_V1-en.txt (English)           /\n// or https://cecill.info/licences/Licence_CeCILL-B_V1-fr.txt (French)         /\n//                                                                             /\n////////////////////////////////////////////////////////////////////////////////\n\nimport {htmlFormsSet} from \"./forms\";\nimport {\n  htmlAfter,\n  htmlAppend,\n  htmlBefore,\n  htmlContent,\n  htmlEmpty,\n  htmlPrepend,\n  htmlRemove,\n  htmlReplaceWith, htmlText\n} from \"./html\";\n\n(\n  () => {\n    const htmlAddClass = opts => {\n      document.querySelectorAll(opts.selector).forEach(elt => {\n        // noinspection JSUnresolvedVariable\n        elt.classList.add(opts.class_name)\n      });\n    };\n    const htmlRemoveClass = (opts) => {\n      document.querySelectorAll(opts.selector).forEach(elt => {\n        // noinspection JSUnresolvedVariable\n        elt.classList.remove(opts.class_name);\n      });\n    };\n    const htmlRemoveAttr = (opts) => {\n      document.querySelectorAll(opts.selector).forEach(elt => {\n        // noinspection JSUnresolvedVariable\n        elt.removeAttribute(opts.attr_name);\n      });\n    };\n    const htmlAddAttribute = (opts) => {\n      document.querySelectorAll(opts.selector).forEach(elt => {\n        // noinspection JSUnresolvedVariable\n        elt.setAttribute(opts.attr_name, opts.attr_value);\n      });\n    };\n    const htmlBooleanAttribute = (opts) => {\n      document.querySelectorAll(opts.selector).forEach(elt => {\n        if (opts.value) {\n          elt.setAttribute(opts.name, opts.name);\n        } else {\n          elt.removeAttribute(opts.name)\n        }\n      });\n    };\n    const htmlDownloadFile = (opts) => {\n      const save = document.createElement('a');\n      save.href = opts.url;\n      save.target = '_blank';\n      save.download = opts.filename || 'unknown';\n      const evt = new MouseEvent('click', {view: window, bubbles: true, cancelable: false});\n      save.dispatchEvent(evt);\n      (window.URL || window.webkitURL).revokeObjectURL(save.href);\n    };\n    const htmlFocus = (opts) => {\n      const elt = document.querySelector(opts.selector);\n      if (elt) {\n        elt.focus({preventScroll: false});\n      }\n    };\n\n    function connectSignals() {\n\n      window.DFSignals.connect('html.after', htmlAfter);\n      /*\"\"\"\n      .. function:: html.after(opts)\n\n          Insert content, specified by the parameter, after each element in the set of matched elements.\n          Equivalent to `$().after()` or `.insertAdjacentHTML('afterend', ...)`.\n          Trigger a `DOMContentAdded` event on the added content.\n\n          .. code-block:: javascript\n\n              window.DFSignals.call('html.after', {selector: \"#obj\", content: \"<span>hello</span>\"});\n\n          .. code-block:: python\n\n              trigger(window_info, 'html.after', to=WINDOW, selector=\"#obj\", content=\"<span>hello</span>\")\n\n          :param string selector: HTML selector\n          :param string content: new HTML content\n\n      */\n\n      window.DFSignals.connect('html.append', htmlAppend);\n      /*\"\"\"\n      .. function:: html.append(opts)\n\n          Insert content, specified by the parameter, to the end of each element in the set of matched elements.\n          Equivalent to `$().append()` or `.insertAdjacentHTML('beforeend', ...)`.\n          Trigger a `DOMContentAdded` event on the added content.\n\n          .. code-block:: javascript\n\n              window.DFSignals.call('html.append', {selector: \"#obj\", content: \"<span>hello</span>\"});\n\n          .. code-block:: python\n\n              trigger(window_info, 'html.append', to=WINDOW, selector=\"#obj\", content=\"<span>hello</span>\")\n\n          :param string selector: HTML selector\n          :param string content: new HTML content\n\n      */\n\n      window.DFSignals.connect('html.prepend', htmlPrepend);\n\n      /*\"\"\"\n      .. function:: html.prepend(opts)\n\n          Insert content, specified by the parameter, to the beginning of each element in the set of matched elements.\n          Equivalent to `$().prepend()` or `.insertAdjacentHTML('afterbegin', ...)`.\n          Trigger a `DOMContentAdded` event on the added content.\n\n          .. code-block:: javascript\n\n              window.DFSignals.call('html.prepend', {selector: \"#obj\", content: \"<span>hello</span>\"});\n\n          .. code-block:: python\n\n              trigger(window_info, 'html.prepend', to=WINDOW, selector=\"#obj\", content=\"<span>hello</span>\")\n\n          :param string selector: HTML selector\n          :param string content: new HTML content\n\n      */\n\n      window.DFSignals.connect('html.before', htmlBefore);\n      /*\"\"\"\n      .. function:: html.before(opts)\n\n          Insert content, specified by the parameter, before each element in the set of matched elements..\n          Equivalent to `$().before()` or `.insertAdjacentHTML('beforebegin', ...)`.\n          Trigger a `DOMContentAdded` event on the added content.\n\n          .. code-block:: javascript\n\n              window.DFSignals.call('html.before', {selector: \"#obj\", content: \"<span>hello</span>\"});\n\n          .. code-block:: python\n\n              trigger(window_info, 'html.before', to=WINDOW, selector=\"#obj\", content=\"<span>hello</span>\")\n\n          :param string selector: HTML selector\n          :param string content: new HTML content\n\n      */\n      window.DFSignals.connect('html.content', htmlContent);\n      /*\"\"\"\n      .. function:: html.content(opts)\n\n          set the HTML contents of every matched element.\n\n          .. code-block:: javascript\n\n              window.DFSignals.call('html.content', {selector: \"#obj\", content: \"<span>hello</span>\"});\n\n          .. code-block:: python\n\n              trigger(window_info, 'html.content', to=WINDOW, selector=\"#obj\", content= \"<span>hello</span>\")\n\n\n          :param string selector: HTML selector\n          :param string content: new HTML content\n      */\n\n      window.DFSignals.connect('html.replace_with', htmlReplaceWith);\n      /*\"\"\"\n      .. function:: html.replace_with(opts)\n\n          Replace each element in the set of matched elements with the provided new content.\n\n          .. code-block:: javascript\n\n              window.DFSignals.call('html.replace_with', {selector: \"#obj\", content: \"<span>hello</span>\"});\n\n          .. code-block:: python\n\n              trigger(window_info, 'html.replace_with', to=WINDOW, selector=\"#obj\", content=\"<span>hello</span>\")\n\n          :param string selector: HTML selector\n          :param string content: new HTML content\n\n      */\n\n      window.DFSignals.connect('html.empty', htmlEmpty);\n      /*\"\"\"\n      .. function:: html.empty(opts)\n\n          Remove all child nodes of the set of matched elements from the DOM.\n\n          .. code-block:: javascript\n\n              window.DFSignals.call('html.empty', {selector: \"#obj\"});\n\n          .. code-block:: python\n\n              trigger(window_info, 'html.empty', to=WINDOW, selector=\"#obj\")\n\n          :param string selector: HTML selector\n\n      */\n\n      window.DFSignals.connect('html.remove', htmlRemove);\n      /*\"\"\"\n      .. function:: html.remove(opts)\n\n          Remove the set of matched elements from the DOM.\n\n          .. code-block:: javascript\n\n              window.DFSignals.call('html.remove', {selector: \"#obj\"});\n\n          .. code-block:: python\n\n              trigger(window_info, 'html.remove', to=WINDOW, selector=\"#obj\")\n\n          :param string selector: HTML selector\n\n      */\n\n      window.DFSignals.connect('html.add_class', htmlAddClass);\n      /*\"\"\"\n      .. function:: html.add_class(opts)\n\n          Adds the specified class(es) to each of the set of matched elements.\n\n          .. code-block:: javascript\n\n              window.DFSignals.call('html.add_class', {selector: \"#obj\", class_name: \"myclass\"});\n\n\n          .. code-block:: python\n\n              trigger(window_info, 'html.add_class', to=WINDOW, selector=\"#obj\", class_name=\"myclass\")\n\n\n          :param string selector: HTML selector\n          :param string class_name: new class\n\n      */\n      window.DFSignals.connect('html.remove_class', htmlRemoveClass);\n      /*\"\"\"\n      .. function:: html.remove_class(opts)\n\n          Remove a single class, multiple classes, or all classes from each element in the set of matched elements.\n\n          .. code-block:: javascript\n\n              window.DFSignals.call('html.remove_class', {selector: \"#obj\", class_name: \"class\"});\n\n          .. code-block:: python\n\n              trigger(window_info, 'html.remove_class', to=WINDOW, selector=\"#obj\", class_name=\"attr\")\n\n          :param string selector: HTML selector\n          :param string class_name: class to remove\n\n      */\n      window.DFSignals.connect('html.remove_attr', htmlRemoveAttr);\n      /*\"\"\"\n      .. function:: html.remove_attr(opts)\n\n          Remove an attribute from each element in the set of matched elements.\n\n          .. code-block:: javascript\n\n              window.DFSignals.call('html.remove_attr', {selector: \"#obj\", attr_name: \"attr\"});\n\n          .. code-block:: python\n\n              trigger(window_info, 'html.remove_attr', to=WINDOW, selector=\"#obj\", attr_name=\"attr\")\n\n          :param string selector: HTML selector\n          :param string attr_name: attribute to remove\n\n      */\n\n      window.DFSignals.connect('html.add_attribute', htmlAddAttribute);\n      /*\"\"\"\n      .. function:: html.add_attribute(opts)\n\n          Add an attribute to each element matched by the given selector.\n\n          .. code-block:: javascript\n\n              window.DFSignals.call('html.add_attribute', {selector: \"#obj\", attr_name: \"data-df\", attr_value: \"value\"});\n\n          .. code-block:: python\n\n              trigger(window_info, 'html.add_attribute', to=WINDOW, selector=\"#obj\", attr_name=\"data-df\", attr_value= \"value\")\n\n\n          :param string selector: HTML selector\n          :param string attr_name: name of the attribute to add\n          :param string attr_value: value of the attribute to add\n\n      */\n      window.DFSignals.connect('html.boolean_attribute', htmlBooleanAttribute);\n      /*\"\"\"\n      .. function:: html.boolean_attribute(opts)\n\n          Set or remove a boolean attribute. Always set the value of the added attribute to its name.\n\n          .. code-block:: javascript\n\n              window.DFSignals.call('html.boolean_attribute', {selector: \"#input\", name: \"checked\", value: true});\n\n          .. code-block:: python\n\n              trigger(window_info, 'html.boolean_attribute', to=WINDOW, selector=\"#input\", name=\"checked\", value=True)\n\n\n          :param string selector: HTML selector\n          :param string name: name of the attribute to add\n          :param string value: if True, add the attribute, if False, remove the attribute\n\n      */\n\n\n      window.DFSignals.connect('html.text', htmlText);\n      /*\"\"\"\n      .. function:: html.text(opts)\n\n          Set the text contents of the matched elements.\n\n          .. code-block:: javascript\n\n              window.DFSignals.call('html.text', {selector: \"#obj\", content: \"<span>hello</span>\"});\n\n          .. code-block:: python\n\n              trigger(window_info, 'html.text', to=WINDOW, selector=\"#obj\", content= \"<span>hello</span>\")\n\n\n          :param string selector: HTML selector\n          :param string content: new HTML content\n\n      */\n\n      window.DFSignals.connect('html.download_file', htmlDownloadFile);\n      /*\"\"\"\n      .. function:: html.download_file(opts)\n\n          Force the client to download the given file.\n\n          .. code-block:: javascript\n\n              window.DFSignals.call('html.download_file', {url: \"http://example.org/test.zip\", filename: \"test.zip\"});\n\n      .. code-block:: python\n\n          trigger(window_info, 'html.download_file', to=WINDOW, url=\"http://example.org/test.zip\", filename=\"test.zip\")\n\n          :param string url: URL of the file\n          :param string filename: name of the file\n\n      */\n\n\n      window.DFSignals.connect('html.focus', htmlFocus);\n      /*\"\"\"\n      .. function:: html.focus(opts)\n\n          Set the focus to the matched element.\n\n          .. code-block:: javascript\n\n              window.DFSignals.call('html.focus', {selector: \"#obj\"});\n\n          .. code-block:: python\n\n              trigger(window_info, 'html.focus', to=WINDOW, selector=\"#obj\")\n\n          :param string selector: HTML selector\n\n      */\n\n      window.DFSignals.connect('html.forms.set', htmlFormsSet);\n      /*\"\"\"\n      .. function:: html.forms.set(opts)\n\n          Set the value of a form input\n\n          .. code-block:: javascript\n\n              window.DFSignals.call('html.forms.set', {selector: \"[name=title]\", value: \"new title\"});\n\n          .. code-block:: python\n\n              trigger(window_info, 'html.forms.set', to=WINDOW, selector=\"[name=title]\", value=\"new_title\")\n\n          :param string selector: HTML selector\n\n      */\n    }\n\n    document.addEventListener(\"DOMContentLoaded\", connectSignals);\n  }\n)();\n","export function serializeForm(form) {\n    /*\n    Serialize a HTMLFormElement as a list of {name: <field name>, value: <field value>}\n    disabled/reset/submit/buttonf fields are ignored\n     */\n    var serialized = [];\n    // Loop through each field in the form\n    for (var i = 0; i < form.elements.length; i++) {\n        var field = form.elements[i];\n        // Respect the same rules as jQuery's serializeArray\n        if (!field.name || field.disabled || field.type === 'reset' || field.type === 'submit' || field.type === 'button') {\n            continue;\n        }\n        if (field.type === \"file\") { // just returns the name of selected files\n            for (var n = 0; n < field.files.length; n++) {\n                serialized.push({ name: field.name, value: field.files[n].name });\n            }\n        }\n        else if (field.type === 'select-multiple') { // get all selected options\n            for (var n = 0; n < field.selectedOptions.length; n++) {\n                serialized.push({ name: field.name, value: field.selectedOptions[n].value });\n            }\n        }\n        else if ((field.type !== 'checkbox' && field.type !== 'radio') || field.checked) {\n            serialized.push({ name: field.name, value: field.value });\n        }\n    }\n    return serialized;\n}\nexport function htmlFormsSet(opts) {\n    function setFormFieldValue(form, name, value) {\n        var item = form.elements.namedItem(name);\n        if (item === null) {\n            return;\n        }\n        else if (item instanceof RadioNodeList) {\n            if ((value === true) || (value === false)) {\n                item.forEach(function (input) {\n                    input.checked = value;\n                });\n            }\n            else if (Array.isArray(value)) {\n                var valuesSet_1 = new Set(value);\n                item.forEach(function (input) {\n                    input.checked = valuesSet_1.has(input.value);\n                });\n            }\n            else {\n                item.forEach(function (input) {\n                    input.checked = input.value === value;\n                });\n            }\n        }\n        else if (item instanceof HTMLTextAreaElement) {\n            item.value = value;\n        }\n        else if ((item instanceof HTMLInputElement) && (item.type === \"checkbox\")) {\n            if (value === true) {\n                item.checked = true;\n            }\n            else if (value === false) {\n                item.checked = false;\n            }\n            else {\n                item.value = value;\n            }\n        }\n        else if (item instanceof HTMLSelectElement) {\n            var options = item.options;\n            if (Array.isArray(value)) {\n                var valuesSet = new Set(value);\n                for (var i = 0; i < options.length; i++) {\n                    options[i].selected = valuesSet.has(options[i].value);\n                }\n            }\n            else {\n                for (var i = 0; i < options.length; i++) {\n                    options[i].selected = options[i].value === value;\n                }\n            }\n        }\n        else if (item instanceof HTMLInputElement) {\n            item.value = value;\n        }\n    }\n    document.querySelectorAll(opts.selector).forEach(function (form) {\n        opts.values.forEach(function (values) {\n            setFormFieldValue(form, values.name, values.value);\n        });\n    });\n}\n(function () {\n    function websocketForms(evt) {\n        /*\n        search all HTML elements with an attribute \"data-df-signal\" that contains a JSON list of Signal objects:\n        {\n            name: \"name of the signal to call\",  (required)\n            on: \"name of the listened event\",\n            opts: \"extra options\",               (optional)\n            form: \"name of option to add to opts that contains the serialized form\",  (optional)\n            value: \"name of option to add to opts that contains the value\",  (optional)\n            prevent: preventDefault               (optional, defaults to true for on==\"submit\" or \"click\" else false )\n        }\n\n        When the listened event is not given, the listened event is\n            * \"submit\" for forms,\n            * \"click\" for \"reset\"/\"submit\"/\"button\" input fields,\n            * \"change\" for other fields.\n\n        Using on a HTML form:\n        ```html\n        <form data-df-signal='[{\"name\": \"signal.name\", \"on\": \"change\", \"form\": \"form_data\", \"opts\": {\"id\": 42} }]'>\n            <input type=\"text\" name=\"title\" value=\"df_websockets\">\n        </form>```\n        or, using the Django templating system:\n        ```html\n        {% load df_websockets %}\n        <form {% js_call \"signal.name\" on=\"change\" form=\"form_data\" id=42 %}>\n            <input type=\"text\" name=\"title\" value=\"df_websockets\">\n        </form>```\n\n        When the field \"title\" is modified, a signal \"signal.name\" is triggered on the server (via the websocket) with\n        the following arguments:\n        ```python\n        form_data = [{\"name\": \"title\", \"value\": \"df_websockets\"}]\n        id = 42\n        ```\n\n        Using on a HTML form input field:\n        ```html\n        <form>\n            <input type=\"text\" name=\"title\" data-df-signal='[{\"name\": \"signal.name\", \"on\": \"change\", \"value\": \"title\", \"opts\": {\"id\": 42} }]'>\n        </form>```\n        or, using the Django templating system:\n        ```html\n        {% load df_websockets %}\n        <form>\n            <input type=\"text\" name=\"title\" {% js_call \"signal.name\" on=\"change\" value=\"title\" id=42 %}>\n        </form>```\n\n        When the field \"title\" is modified, a signal \"signal.name\" is triggered on the server (via the websocket) with\n        the following arguments:\n        ```python\n        title = \"new title value\"\n        id = 42\n        ```\n         */\n        if (!evt.target.querySelectorAll) {\n            return;\n        }\n        evt.target.querySelectorAll(\"[data-df-signal]\").forEach(function (target) {\n            var signals = JSON.parse(target.getAttribute(\"data-df-signal\"));\n            signals.forEach(function (signal) {\n                var eventName = signal.on;\n                if (!eventName) {\n                    if (target.tagName === \"FORM\") {\n                        eventName = \"submit\";\n                    }\n                    else if ((target.tagName === \"INPUT\" && !(target.type === 'reset' || target.type === 'submit' || target.type === 'button')) || (target.tagName === \"TEXTAREA\")) {\n                        eventName = \"change\";\n                    }\n                    else {\n                        eventName = \"click\";\n                    }\n                }\n                var callback = function (evt) {\n                    // noinspection JSUnresolvedVariable\n                    var prevent = signal.prevent;\n                    var opts = signal.opts || {};\n                    if (signal.form) {\n                        opts[signal.form] = serializeForm(target);\n                    }\n                    if (signal.value) {\n                        if (target.type === \"file\") { // just returns the name of selected files\n                            opts[signal.value] = [];\n                            for (var n = 0; n < target.files.length; n++) {\n                                opts[signal.value].push(target.files[n].name);\n                            }\n                        }\n                        else if (target.type === 'select-multiple') { // get all selected options\n                            opts[signal.value] = [];\n                            for (var n = 0; n < target.selectedOptions.length; n++) {\n                                opts[signal.value].push(target.selectedOptions[n].value);\n                            }\n                        }\n                        else if (target.type === 'checkbox' || target.type === 'radio') {\n                            opts[signal.value] = target.checked;\n                        }\n                        else {\n                            opts[signal.value] = target.value;\n                        }\n                    }\n                    window.DFSignals.call(signal.name, opts, undefined);\n                    if (prevent === true || (prevent === null && eventName !== \"change\")) {\n                        evt.preventDefault();\n                    }\n                };\n                target.addEventListener(eventName, callback);\n            });\n        });\n    }\n    document.addEventListener(\"DOMContentAdded\", function (evt) {\n        window.setTimeout(function () {\n            websocketForms(evt);\n        }, 50);\n        // awful trick for being sure that our addEventListener is the last.\n        // allows things like CKEditor to push its content to the textarea before sending the content of the form.\n    });\n    document.addEventListener(\"DOMContentLoaded\", function (evt) {\n        window.setTimeout(function () {\n            websocketForms(evt);\n        }, 50);\n        // awful trick for being sure that our addEventListener is the last.\n        // allows things like CKEditor to push its content to the textarea before sending the content of the form.\n    });\n})();\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// startup\n// Load entry module and return exports\n__webpack_require__(66);\n__webpack_require__(841);\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(894);\n"],"names":["window","DFSignals","connection","buffer","registry","wsurl","document","addEventListener","websocketConnect","cookieName","heartbeatMsg","dfWsURL","cname","name","ca","decodeURIComponent","cookie","split","i","length","c","charAt","substring","indexOf","getCookie","console","info","WebSocket","heartbeatInterval","onopen","send","setInterval","sendHeartbeat","e","warn","message","onmessage","data","debug","msg","JSON","parse","signal","signal_id","call","opts","onerror","error","onclose","event","clearInterval","code","reason","setTimeout","close","id","undefined","stringify","push","connect","fn","htmlAfter","querySelectorAll","selector","forEach","elt","originalNextSibling","nextSibling","insertAdjacentHTML","content","sibling","dispatchEvent","Event","bubbles","htmlAppend","originalLastChild","lastChild","child","previousSibling","htmlPrepend","originalFirstChild","firstChild","htmlBefore","originalPreviousSibling","htmlContent","innerHTML","htmlReplaceWith","parentNode","outerHTML","htmlEmpty","removeChild","htmlRemove","htmlText","textContent","htmlAddClass","classList","add","class_name","htmlRemoveClass","remove","htmlRemoveAttr","removeAttribute","attr_name","htmlAddAttribute","setAttribute","attr_value","htmlBooleanAttribute","value","htmlDownloadFile","save","createElement","href","url","target","download","filename","evt","MouseEvent","view","cancelable","URL","webkitURL","revokeObjectURL","htmlFocus","querySelector","focus","preventScroll","htmlFormsSet","form","values","item","elements","namedItem","RadioNodeList","input","checked","Array","isArray","valuesSet_1","Set","has","HTMLTextAreaElement","HTMLInputElement","type","HTMLSelectElement","options","valuesSet","selected","setFormFieldValue","websocketForms","getAttribute","eventName","on","tagName","prevent","serialized","field","disabled","n","files","selectedOptions","serializeForm","preventDefault","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","d","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty"],"sourceRoot":""}